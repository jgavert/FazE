#include "base.bff"

// Core

#include "core/core.bff"

#include "faze/graphics.bff"

// App
#include "app/app.bff"

// graphics tests with google test

#include "gtest/graphics/graphics_tests.bff"
#include "gtest/core/core_tests.bff"

ForEach( .Config in .Configs )
{
	Using( .Config )

	Alias( 'Tests-$Platform$-$Config$' )
	{
		.Targets    = {
					'core_tests-$Platform$-$Config$',
					'graphics_tests-$Platform$-$Config$'
					  }
	}
}

ForEach( .Config in .Configs )
{
	Using( .Config )

	Alias( 'Tests-$Platform$-$Config$-run' )
	{
		.Targets    = {
					'core_tests-$Platform$-$Config$-run',
					'graphics_tests-$Platform$-$Config$-run'
					  }
	}
}

.testPlatform = 'x64Linux'
#if __WINDOWS__
.testPlatform = 'x64'
#endif
.testConfigs = { 'debug', 'profile', 'release' }
ForEach( .Config in .testConfigs )
{
	Alias( 'Tests-$Config$' )
	{
		.Targets    = {
					'core_tests-$testPlatform$-$Config$',
					'graphics_tests-$testPlatform$-$Config$'
					  }
	}
}
ForEach( .Config in .testConfigs )
{
	Alias( 'Tests-$Config$-run' )
	{
		.Targets    = {
					'core_tests-$testPlatform$-$Config$-run',
					'graphics_tests-$testPlatform$-$Config$-run'
					  }
	}
}

// Aliases : All
//------------------------------------------------------------------------------
#if __WINDOWS__
    Alias( 'Apps' )
    {
        .Targets    = { 'App-x64'}
    }
	Alias( 'Tests' )
    {
        .Targets    = { 'core_tests-x64-run', 'graphics_tests-x64-run'}
    }

#endif
#if __LINUX__
    Alias( 'Apps' )
    {
        .Targets    = { 'App-x64Linux'}
    }
	Alias( 'Tests' )
    {
        .Targets    = { 'core_tests-x64Linux-run', 'graphics_tests-x64Linux-run'}
    }
#endif

	Alias( 'All' )
    {
        .Targets    = { 'Apps' }
    }

// Aliases : All+Tests
//------------------------------------------------------------------------------
Alias( 'All+Tests' )
{
  .Targets    = { 'All', 'Tests' }
}

// Aliases : proj (all projects)
//------------------------------------------------------------------------------

Alias( 'proj' )
{
  .Targets    = {
				  'All-proj',
				  'Core-proj',
				  'App-proj',
				  'Graphics-proj',
				  'graphics_tests-proj',
				  'core_tests-proj'
				}
}

// Solution ... is not that nice as all projects don't have the exact same targets... wait that can be fixed actually!
//VSSolution( 'solution' )
//{
//  // Basic options
//  .SolutionOutput                    = './faze_debug.sln' // Path to Solution file to be generated
//  .SolutionProjects =
//	{
//	  'App-proj' // Previously defined with VCXProject
//	  'Core-proj' // Previously defined with VCXProject
//	}
  //.SolutionConfigs                    // (optional) Solution configurations (see below)
  //.SolutionBuildProject               // (optional) Project set to build when "Build Solution" is selected
  // Folders
  //.SolutionFolders                    // (optional) Folders to organize projects (see below)

  // Advanced options
  //.SolutionDependencies               // (optional) Project dependency information (see below)

  // Version Info
//  .SolutionVisualStudioVersion			= "14.0.24720.00"
//  .SolutionMinimumVisualStudioVersion	= "14.0.22823.1"
  //.SolutionVisualStudioVersion        // (optional) Version of Solution (default "14.0.22823.1" VS2015 RC)
  //.SolutionMinimumVisualStudioVersion // (optional) Min version of Solution (default "10.0.40219.1" VS2010 Express)
//}

