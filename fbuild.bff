#include "base.bff"

// Core
#include "core/core.bff"
// Add graphics here
#include "gfxdx12/dx12.bff"
#include "gfxvk/vulkan.bff"
#include "gfxnull/gfxnull.bff"
// App
#include "app/app.bff"

// Aliases : All-$Platform$-$Config$
//------------------------------------------------------------------------------
ForEach( .gfxApi in .GraphicsBackends)
{
	Using( .gfxApi )
	ForEach( .Config in .Configs )
	{
		Using( .Config )

		Alias( 'All-$Platform$-$GraphicsApi$-$Config$' )
		{
			.Targets    = { // tests
						  // executables
						  'App-Exe-$Platform$-$GraphicsApi$-$Config$'

						  // Clang doesn't link at the moment, so we need list all the libs manually
						  //'Core-$Platform$-$Config$'
						  }
		}
	}
}

.Platforms = { 'x64' }
ForEach( .Platform in .Platforms )
{
	ForEach( .gfxApi in .GraphicsBackends)
	{
		Using( .gfxApi )
		Alias( 'All-$Platform$-$GraphicsApi$' )
		{
			.Targets	= {
							'All-$Platform$-$GraphicsApi$-Debug',
							'All-$Platform$-$GraphicsApi$-Profile',
							'All-$Platform$-$GraphicsApi$-Release'
						  }
		}
	}
}

.Platforms = { 'x64' }
ForEach( .Platform in .Platforms )
{
  Alias( 'All-$Platform$' )
  {
    .Targets = {
				'All-$Platform$-D3D12',
				'All-$Platform$-Vulkan',
				'All-$Platform$-Null'
				}
  }
}

// Aliases : All
//------------------------------------------------------------------------------
#if __WINDOWS__
    Alias( 'All' )
    {
        .Targets    = { 'All-x64' }
    }
#endif

//#if __WINDOWS__
//    Alias( 'Tests' )
//    {
//        .Targets    = { }
//    }
//#endif

// Aliases : All+Tests
//------------------------------------------------------------------------------
Alias( 'All+Tests' )
{
  .Targets    = { 'All' }
}

// Aliases : proj (all projects)
//------------------------------------------------------------------------------

Alias( 'proj' )
{
  .Targets    = { 
				  'All-proj',
				  'Core-proj',
				  'App-proj',
				  'GfxDx12-proj',
				  'GfxVk-proj',
				  'GfxNull-proj'
				}
}

// Solution ... is not that nice as all projects don't have the exact same targets... wait that can be fixed actually!
//VSSolution( 'solution' )
//{
//  // Basic options
//  .SolutionOutput                    = '.\faze_debug.sln' // Path to Solution file to be generated
//  .SolutionProjects =
//	{
//	  'App-proj' // Previously defined with VCXProject
//	  'Core-proj' // Previously defined with VCXProject
//	}
  //.SolutionConfigs                    // (optional) Solution configurations (see below)
  //.SolutionBuildProject               // (optional) Project set to build when "Build Solution" is selected
  // Folders
  //.SolutionFolders                    // (optional) Folders to organize projects (see below)

  // Advanced options
  //.SolutionDependencies               // (optional) Project dependency information (see below)
  
  // Version Info
//  .SolutionVisualStudioVersion			= "14.0.24720.00" 
//  .SolutionMinimumVisualStudioVersion	= "14.0.22823.1"  
  //.SolutionVisualStudioVersion        // (optional) Version of Solution (default "14.0.22823.1" VS2015 RC)
  //.SolutionMinimumVisualStudioVersion // (optional) Min version of Solution (default "10.0.40219.1" VS2010 Express)
//}

