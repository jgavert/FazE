// FBuildApp
//------------------------------------------------------------------------------
{
	.ProjectName		= 'App'
	.ProjectPath		= 'app'

	// Visual Studio Project Generation
	//--------------------------------------------------------------------------



	VCXProject( '$ProjectName$-proj' )
	{
		.ProjectOutput				= '$ProjectPath$\$ProjectName$.vcxproj'
		.ProjectInputPaths			= '$ProjectPath$\'
		.ProjectBasePath			= '$ProjectPath$\'
		.OutputDirectory			= '^$(SolutionDir)\bin\^$(Platform)-^$(Configuration)\^$(ProjectName)'
		.LocalDebuggerCommand		= '^$(SolutionDir)\bin\^$(Platform)-^$(Configuration)\^$(ProjectName)\^$(ProjectName).exe'
		.LocalDebuggerWorkingDirectory = '^$(SolutionDir)\appspace\'
		.ProjectConfigs				= .ProjectGfxConfigs
	}

    // Unity
    //--------------------------------------------------------------------------
	ForEach( .gfxApi in .GraphicsBackends)
	{
		Using( .gfxApi )
		{
			// Common options
			.UnityInputPath             = '$ProjectPath$\'
			.UnityOutputPath            = '$OutputBase$\Unity\$ProjectPath$-$GraphicsApi$\'

			// Windows
			Unity( '$ProjectName$-$GraphicsApi$-Unity-Windows' )
			{
			}
		}
	}

    .CommonLinkerLibs   = ' /SUBSYSTEM:WINDOWS'
						+ ' libcmt.lib'
                        + ' kernel32.lib'
                        + ' user32.lib'
                        + ' gdi32.lib'
                        + ' winspool.lib'
                        + ' comdlg32.lib'
                        + ' advapi32.lib'
                        + ' shell32.lib'
                        + ' ole32.lib'
                        + ' oleaut32.lib'
                        + ' uuid.lib'
                        + ' odbc32.lib'
                        + ' odbccp32.lib'
                        + ' libconcrt1.lib'
						+ ' OLDNAMES.lib'
						+ ' D3d12.lib'
						+ ' Dxgi.lib'
						+ ' atls.lib'
						+ ' D3DCompiler.lib'
	.Debuglinkerlibs    = ' libcpmtd.lib' // brings thread support
						+ ' libucrtd.lib'
                        + ' libvcruntimed.lib'
	.Releaselinkerlibs  = ' libcpmt.lib'
						+ ' libucrt.lib'
                        + ' libvcruntime.lib' 
	.Profilelinkerlibs  = .Releaselinkerlibs

	.X64DebugConfiguration =
	[
		Using (.X64DebugConfig)
		.LinkerOptions	+ .CommonLinkerLibs
						+ .Debuglinkerlibs
						+ .oculuslibDebug

	]

	.X64ProfileConfiguration =
	[
		Using (.X64ProfileConfig)
		.LinkerOptions	+ .CommonLinkerLibs
						+ .Profilelinkerlibs
						+ .oculuslibRelDeb
	]

	.X64ReleaseConfiguration =
	[
		Using (.X64ReleaseConfig)
		.LinkerOptions	+ .CommonLinkerLibs
						+ .Releaselinkerlibs
						+ .oculuslibRelease
	]


	.Configs_Windows_MSVC2 = { .X64DebugConfiguration, .X64ProfileConfiguration, .X64ReleaseConfiguration }

	// Windows (MSVC)
	//--------------------------------------------------------------------------
	ForEach( .gfxApi in .GraphicsBackends)
	{
		Using( .gfxApi )
		ForEach( .Config in .Configs_Windows_MSVC2 )
		{
			Using( .Config )
			
			.CompilerOptions    + .gfxDefines
			.PCHOptions         + .gfxDefines

			.OutputBase + '\$Platform$-$GraphicsApi$-$Config$'
			//Print('$LinkerOptions$')
			//Print('$BaseIncludePaths$')
			// Static Library
			Library( '$ProjectName$-Lib-$Platform$-$GraphicsApi$-$Config$' )
			{
				// Input (Unity)
				.CompilerInputUnity			= '$ProjectName$-$GraphicsApi$-Unity-Windows'

				// Output
				.CompilerOutputPath			= '$OutputBase$\$ProjectName$\'
				.LibrarianOutput 			= '$OutputBase$\$ProjectName$\$ProjectName$.lib'
			}

			// Executable
			Executable( '$ProjectName$-Exe-$Platform$-$GraphicsApi$-$Config$' )
			{
				.Libraries					= {
												  '$ProjectName$-Lib-$Platform$-$GraphicsApi$-$Config$',
												  'core-Lib-$Platform$-$Config$',
												  '$GfxName$-Lib-$Platform$-$Config$'
												}
				.LinkerOutput				= '$OutputBase$\$ProjectName$\$ProjectName$.exe'
			}
			Alias( '$ProjectName$-$Platform$-$GraphicsApi$-$Config$' ) { .Targets = '$ProjectName$-Exe-$Platform$-$GraphicsApi$-$Config$' }
		}
		
		// Aliases
		//--------------------------------------------------------------------------
		// Per-Config
		Alias( '$ProjectName$-$GraphicsApi$-Debug' )	{ .Targets = { '$ProjectName$-X64-$GraphicsApi$-Debug'} }
		Alias( '$ProjectName$-$GraphicsApi$-Profile' )	{ .Targets = { '$ProjectName$-X64-$GraphicsApi$-Profile'} }
		Alias( '$ProjectName$-$GraphicsApi$-Release' )	{ .Targets = { '$ProjectName$-X64-$GraphicsApi$-Release'} }

		// Per-Platform
		Alias( '$ProjectName$-X64-$GraphicsApi$' )		{ .Targets = { '$ProjectName$-X64-$GraphicsApi$-Debug', '$ProjectName$-X64-$GraphicsApi$-Release', '$ProjectName$-X64-$GraphicsApi$-Profile' } }

		// All
		Alias( '$ProjectName$-$GraphicsApi$' )
		{
			.Targets = { '$ProjectName$-$GraphicsApi$-Debug', '$ProjectName$-$GraphicsApi$-Profile', '$ProjectName$-$GraphicsApi$-Release' }
		}
	}

	Alias( '$ProjectName$' )
	{
		.Targets = {'$ProjectName$-D3D12', '$ProjectName$-Vulkan', '$ProjectName$-Null'}
	}

}
